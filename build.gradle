/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
	id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "3.3"
}

group = 'com.jb'
version = '0.0.1-SNAPSHOT'
description = 'jb-application-java'
java.sourceCompatibility = JavaVersion.VERSION_1_8

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.language","java"
        property "sonar.host.url" , "http://192.168.1.40:9000"
		property "sonar.projectKey","jewelbank_jb-application-java"
		property "sonar.coverage.exclusions", "**/com/jb/application/controller/*Controller.java,**/com/jb/application/controller/**,**/com/jb/application/models/*Model.java,**/com/jb/application/models/**,**/com/jb/application/entities/*Entity.java,**/com/jb/application/entities/**,**/*Application.java"
		property "sonar.sources", "src/main/java"
        property "sonar.exclusions", "src/test/java/**/*"
		
    }
}

repositories {
    mavenCentral()
//	maven {
//      url = uri('https://repo.maven.apache.org/maven2/')
//	}
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

    compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    
    implementation 'javax.xml.bind:jaxb-api:2.3.0'
    implementation 'org.modelmapper:modelmapper:2.4.4'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testImplementation 'org.mockito:mockito-inline:2.15.0'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.apache.logging.log4j:log4j-layout-template-json'
}
ext['log4j2.version'] = '2.15.0'
configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    jacoco {
        excludes += ["**/com.jb.application.controller/**","**/com.jb.application.entities/**","**/com.jb.application.models/**"]
    }
}


jacoco {
    toolVersion = "0.8.6"
    //reportsDirectory = file("${buildDir}/reports/jacoco")
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 1
            }
        }
    }
  
}


jacocoTestReport {
	dependsOn test
    reports {
        xml.required = true
        csv.required = true
        html.required = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ["**/com/jb/application/controller/**",
           						"**/com/jb/application/entities/**",
                              "**/com/jb/application/models/**"])
        }))
    }
}

tasks['sonarqube'].dependsOn jacocoTestReport
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
